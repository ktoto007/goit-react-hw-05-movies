{"version":3,"file":"static/js/390.94dcf94f.chunk.js","mappings":"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","sources":["components/cast/Cast.jsx","services/moviesApi.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { apiService } from 'services/moviesApi';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n  useEffect(() => {\n    apiService.getMoviesCredits(movieId).then(credits => setCast(credits.cast));\n  }, [movieId]);\n\n  if (cast) {\n    return (\n      <ul>\n        {cast.map(({ profile_path, name, character, id }) => (\n          <li key={id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n              alt={name}\n              width=\"120px\"\n            />\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n};\n\nexport default Cast;\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'aa05d9ef1feff0e96ac321d8773a5c67';\n\nclass Apiservice {\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n  }\n\n  async getPopularMovies() {\n    try {\n      const response = await fetch(\n        `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${this.page}`\n      );\n      const data = await response.json();\n      const popularMovies = data;\n      return popularMovies;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async fetchMovieByQuery() {\n    const response = await fetch(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&query=${this.searchQuery}&page=${this.page}`\n    );\n    const results = await response.json();\n    return results;\n  }\n\n  async getMoviesDetails(id) {\n    try {\n      const response = await fetch(\n        `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=${this.lang}`\n      );\n      if (!response.ok) {\n        throw new Error('error');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async getMoviesCredits(id) {\n    try {\n      const response = await fetch(\n        `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=${this.lang}`\n      );\n      if (!response.ok) {\n        throw new Error('error');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async getMoviesRewiews(id) {\n    try {\n      const response = await fetch(\n        `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=${this.lang}`\n      );\n      if (!response.ok) {\n        throw new Error('error');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n\n  get pages() {\n    return this.page;\n  }\n  set pages(newPage) {\n    this.page = newPage;\n  }\n}\n\nexport const apiService = new Apiservice();\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","useState","cast","setCast","useEffect","apiService","then","credits","map","profile_path","name","character","id","src","alt","width","BASE_URL","API_KEY","Apiservice","this","searchQuery","page","fetch","response","json","data","popularMovies","console","log","results","lang","ok","Error","newQuery","newPage","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined"],"sourceRoot":""}