{"version":3,"file":"static/js/134.d1f02e22.chunk.js","mappings":"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","sources":["components/movieList/MovieList.styled.jsx","components/movieList/MovieList.jsx","pages/Movies.jsx","services/moviesApi.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  margin-bottom: 7px;\n  :last-child {\n    margin-bottom: 0;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { ListItem } from './MovieList.styled';\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(movie => {\n        return (\n          <ListItem key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.original_title}\n            </Link>\n          </ListItem>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import MovieList from 'components/movieList/MovieList';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { apiService } from 'services/moviesApi';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    async function fetchMovieByQuery() {\n      apiService.query = query;\n      const movies = await apiService.fetchMovieByQuery();\n      setMovies(movies.results);\n    }\n\n    fetchMovieByQuery();\n  }, [query]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (e.target.name.value === '') {\n      setSearchParams({});\n      setMovies([]);\n      return;\n    }\n    setSearchParams({ query: e.target.name.value });\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input type=\"text\" name=\"name\" defaultValue={query ?? ''} />\n        <button type=\"submit\">Search</button>\n      </form>\n      <MovieList movies={movies}></MovieList>\n    </>\n  );\n};\n\nexport default Movies;\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'aa05d9ef1feff0e96ac321d8773a5c67';\n\nclass Apiservice {\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n  }\n\n  async getPopularMovies() {\n    try {\n      const response = await fetch(\n        `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${this.page}`\n      );\n      const data = await response.json();\n      const popularMovies = data;\n      return popularMovies;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async fetchMovieByQuery() {\n    const response = await fetch(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&query=${this.searchQuery}&page=${this.page}`\n    );\n    const results = await response.json();\n    return results;\n  }\n\n  async getMoviesDetails(id) {\n    try {\n      const response = await fetch(\n        `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=${this.lang}`\n      );\n      if (!response.ok) {\n        throw new Error('error');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async getMoviesCredits(id) {\n    try {\n      const response = await fetch(\n        `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=${this.lang}`\n      );\n      if (!response.ok) {\n        throw new Error('error');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async getMoviesRewiews(id) {\n    try {\n      const response = await fetch(\n        `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=${this.lang}`\n      );\n      if (!response.ok) {\n        throw new Error('error');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n\n  get pages() {\n    return this.page;\n  }\n  set pages(newPage) {\n    this.page = newPage;\n  }\n}\n\nexport const apiService = new Apiservice();\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["ListItem","styled","movies","location","useLocation","map","movie","to","id","state","from","original_title","useState","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","apiService","results","fetchMovieByQuery","onSubmit","e","preventDefault","target","name","value","type","defaultValue","BASE_URL","API_KEY","Apiservice","this","searchQuery","page","fetch","response","json","data","popularMovies","console","log","lang","ok","Error","newQuery","newPage","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined"],"sourceRoot":""}